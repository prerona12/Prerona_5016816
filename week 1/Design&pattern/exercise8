//Exercise 8: Implementing the Strategy Pattern

public class StrategyPatternExample {
    public static void main(String[] args) {
        // Create different payment strategies
        PaymentStrategy creditCard = new CreditCardPayment("1234-5678-9012-3456", "John Doe");
        PaymentStrategy paypal = new PayPalPayment("john.doe@example.com");

        // Create context and set strategy
        PaymentContext context = new PaymentContext(creditCard);
        System.out.println("Testing Credit Card Payment:");
        context.executePayment(100.00);

        // Change strategy to PayPal
        context.setPaymentStrategy(paypal);
        System.out.println("Testing PayPal Payment:");
        context.executePayment(200.00);
    }
}
interface PaymentStrategy {
    void pay(double amount);
}


class CreditCardPayment implements PaymentStrategy {
    private String cardNumber;
    private String cardHolderName;

    public CreditCardPayment(String cardNumber, String cardHolderName) {
        this.cardNumber = cardNumber;
        this.cardHolderName = cardHolderName;
    }

    @Override
    public void pay(double amount) {
        System.out.println("Paid $" + amount + " using Credit Card.");
        // Additional credit card payment logic could go here
    }
}

// Concrete Strategy 2: PayPal Payment
class PayPalPayment implements PaymentStrategy {
    private String email;

    public PayPalPayment(String email) {
        this.email = email;
    }

    @Override
    public void pay(double amount) {
        System.out.println("Paid $" + amount + " using PayPal.");
        // Additional PayPal payment logic could go here
    }
}


class PaymentContext {
    private PaymentStrategy paymentStrategy;

    public PaymentContext(PaymentStrategy paymentStrategy) {
        this.paymentStrategy = paymentStrategy;
    }

    public void setPaymentStrategy(PaymentStrategy paymentStrategy) {
        this.paymentStrategy = paymentStrategy;
    }

    public void executePayment(double amount) {
        paymentStrategy.pay(amount);
    }
}


